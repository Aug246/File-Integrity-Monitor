version: '3.8'

services:
  # File Integrity Monitor Agent
  fim-agent:
    build: .
    container_name: fim-agent
    restart: unless-stopped
    volumes:
      # Mount host directories to monitor
      - /etc:/etc:ro
      - /usr/local/bin:/usr/local/bin:ro
      - /var/log:/var/log:ro
      # Mount persistent storage
      - fim-data:/var/lib/fim
      - fim-logs:/var/log/fim
      - ./fim.yml:/etc/fim/fim.yml:ro
    environment:
      - FIM_AGENT_ID=compose-fim-agent
      - FIM_DB_PATH=/var/lib/fim/fim.db
      - FIM_CONFIG_PATH=/etc/fim/fim.yml
    networks:
      - fim-network
    depends_on:
      - fim-postgres
    healthcheck:
      test: ["CMD", "python", "-c", "import sqlite3; sqlite3.connect('/var/lib/fim/fim.db')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database (Optional - for multi-host deployments)
  fim-postgres:
    image: postgres:15-alpine
    container_name: fim-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fim
      POSTGRES_USER: fimuser
      POSTGRES_PASSWORD: fimpassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - fim-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fimuser -d fim"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FIM Dashboard (Future enhancement)
  # fim-dashboard:
  #   image: nginx:alpine
  #   container_name: fim-dashboard
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./dashboard:/usr/share/nginx/html:ro
  #   networks:
  #     - fim-network
  #   depends_on:
  #     - fim-agent

volumes:
  fim-data:
    driver: local
  fim-logs:
    driver: local
  postgres-data:
    driver: local

networks:
  fim-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
